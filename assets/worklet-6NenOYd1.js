var y=Object.defineProperty;var R=(t,e,o)=>e in t?y(t,e,{enumerable:!0,configurable:!0,writable:!0,value:o}):t[e]=o;var i=(t,e,o)=>R(t,typeof e!="symbol"?e+"":e,o);(function(){"use strict";class t extends AudioWorkletProcessor{constructor(){super();i(this,"phase",0)}static get parameterDescriptors(){return[{name:"frequency",defaultValue:440,automationRate:"a-rate"},{name:"duty",defaultValue:.5,automationRate:"a-rate"},{name:"volume",defaultValue:1,minValue:0,maxValue:1,automationRate:"a-rate"}]}process(V,m,n){const l=m[0],p=globalThis.sampleRate,s=n.frequency,u=n.duty,r=n.volume;for(let c=0;c<l.length;c++){const h=l[c];for(let a=0;a<h.length;a++){const f=s.length>1?s[a]:s[0],d=u.length>1?u[a]:u[0],g=r.length>1?r[a]:r[0];h[a]=(this.phase<d?1:-1)*g,this.phase=(this.phase+f/p)%1}}return!0}}registerProcessor("rectWaveProcessor",t)})();
